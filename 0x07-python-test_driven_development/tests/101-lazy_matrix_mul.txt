	Test module for '101-lazy_matrix_mul'
	===============================

	Importing the '101-lazy_matrix_module'

>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

	Testing with two correct matrices

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
array([[ 7, 10],
       [15, 22]])

	Testing with matrices having negative elements

>>> lazy_matrix_mul([[1, 2], [3, -4]], [[5, 6], [-7, 8]])
array([[ -9,  22],
       [ 43, -14]])

	Testing with matrices having float elements

>>> lazy_matrix_mul( [[1, 2.5], [3, 5.4]], [[5, 6.6], [7, 8]])
array([[22.5, 26.6],
       [52.8, 63. ]])

	Testing with matrices that are not lists

>>> lazy_matrix_mul([[1, 2], [3, 4]], ([1, 2], [3, 4]))
array([[ 7, 10],
       [15, 22]])

>>> lazy_matrix_mul("string", ([1, 2], [3, 4]))
Traceback (most recent call last):
        ...
ValueError: Scalar operands are not allowed, use '*' instead

	Testing with matrices having items that are not lists

>>> lazy_matrix_mul([[1, 2], 3, 4], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
ValueError: setting an array element with a sequence.

>>> lazy_matrix_mul([[1, 2], (3, 4)], [[1, 2], [3, 4]])
array([[ 7, 10],
       [15, 22]])

>>> lazy_matrix_mul([[1, 2], "string"], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
ValueError: setting an array element with a sequence

>>> lazy_matrix_mul([[1, 2], [3, 4]], [1, 2, 3, 4])
Traceback (most recent call last):
        ...
ValueError: shapes (2,2) and (4,) not aligned: 2 (dim 1) != 4 (dim 0)

	Testing with matrices that are empty

>>> lazy_matrix_mul([],[])
0.0

>>> lazy_matrix_mul([[1, 2]],[])
Traceback (most recent call last):
        ...
ValueError: shapes (1,2) and (0,) not aligned: 2 (dim 1) != 0 (dim 0)

	Testing with matrices that have non-float or non-integer values
>>> lazy_matrix_mul([[1, 2], [3, 4]], [["string", 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: invalid data type for einsum

>>> lazy_matrix_mul([[1, 2], ["3", 4]], [["string", 2], [3, 4]])
Traceback (most recent call last):
        ...
TypeError: invalid data type for einsum

	Testing with matrices that have unequal length elements

>>> lazy_matrix_mul([[1, 2], [3, 4, 5]], [[3, 2], [3, 4]])
Traceback (most recent call last):
	...
ValueError: setting an array element with a sequence.

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[3, 2], [3, 4, 4]])
Traceback (most recent call last):
        ...
ValueError: setting an array element with a sequence.

	Testing with matrices that can't be multiplied

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[3, 2], [3, 4], [4,7]])
Traceback (most recent call last):
	...
ValueError: shapes (2,2) and (3,2) not aligned: 2 (dim 1) != 3 (dim 0)

	Testing with one argument missing

>>> lazy_matrix_mul([[3, 2], [3, 4], [4,7]])
Traceback (most recent call last):
	...
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

	Testing with two arguments missing

>>> lazy_matrix_mul()
Traceback (most recent call last):
	...
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

	Testing the order of errors raised

>>> lazy_matrix_mul([[1, 2], [3, 4]], (["a", 2], [3, 4]))
Traceback (most recent call last):
        ...
TypeError: invalid data type for einsum

>>> lazy_matrix_mul([[1, 2], [3, 4]], (["a", 2], [3, 4]))
Traceback (most recent call last):
        ...
TypeError: invalid data type for einsum
